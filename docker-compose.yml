services:
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: WEB_APP
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./DB/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - appnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    depends_on:
      - postgres
    networks:
      - appnet

  nextjs:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: nextjs
    ports:
      - "3000:3000"
    volumes:
      - ./app:/app/app:delegated
      - ./public:/app/public:delegated
      - ./.env:/app/.env:ro
      # ✅ Mount config files ที่จำเป็น
      - ./next.config.mjs:/app/next.config.mjs:ro
      - ./postcss.config.mjs:/app/postcss.config.mjs:ro
      - ./jsconfig.json:/app/jsconfig.json:ro
    command: sh -c "npm run dev"
    environment:
      DATABASE_URL: postgresql://postgres:root@postgres:5432/WEB_APP
      JWT_SECRET: pap1585
      NODE_ENV: development
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - appnet

networks:
  appnet:
    driver: bridge

volumes:
  pg_data: