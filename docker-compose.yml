services:
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: WEB_APP
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./DB/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - appnet
    # ✅ เพิ่ม healthcheck
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    depends_on:
      - postgres
    networks:
      - appnet

  nextjs:
    build:
      context: .
      target: builder        # ✅ ใช้สเตจ builder ที่มี dev deps ติดตั้งแล้ว
    container_name: nextjs
    ports:
      - "3000:3000"
    volumes:
      - ./:/app              # เมานท์โค้ด
      - /app/node_modules    # ✅ กันไม่ให้ node_modules ในคอนเทนเนอร์โดนทับ
      - /app/.next           # แคช build สำหรับ HMR
    command: "npm run dev"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://postgres:root@postgres:5432/WEB_APP
      # WATCHPACK_POLLING: "true"  # ← ถ้า HMR ไม่เด้งบนบางเครื่องค่อยเปิดบรรทัดนี้
    depends_on:
      postgres:
        condition: service_healthy  # ✅ รอให้ postgres healthy
    networks:
      - appnet

networks:
  appnet:
    driver: bridge

volumes:
  pg_data:
